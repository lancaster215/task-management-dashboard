{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: 'turbopack-connected'\r\n    }\r\n  | {\r\n      type: 'turbopack-message'\r\n      data: Record<string, any>\r\n    }\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void\r\n  sendMessage: SendMessage\r\n  onUpdateError: (err: unknown) => void\r\n}\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case 'turbopack-connected':\r\n        handleSocketConnected(sendMessage)\r\n        break\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage)\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage)\r\n          }\r\n          applyAggregatedUpdates()\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            '[Fast Refresh] performing full reload\\n\\n' +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\r\n              'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\r\n              'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\r\n              'Fast Refresh requires at least one parent function component in your React tree.'\r\n          )\r\n          onUpdateError(e)\r\n          location.reload()\r\n        }\r\n        break\r\n    }\r\n  })\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error('A separate HMR handler was already registered')\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    },\r\n  }\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>\r\n  unsubscribe: () => void\r\n}\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map()\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message))\r\n}\r\n\r\ntype ResourceKey = string\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  })\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: 'turbopack-subscribe',\r\n    ...resource,\r\n  })\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: 'turbopack-unsubscribe',\r\n      ...resource,\r\n    })\r\n  }\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key))\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map()\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  let aggregated = chunkListsWithPendingUpdates.get(key)\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    )\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg)\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return\r\n  hooks.beforeRefresh()\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg)\r\n  }\r\n  chunkListsWithPendingUpdates.clear()\r\n  finalizeUpdate()\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks)\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks\r\n  }\r\n\r\n  let merged\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0]\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        )\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        )\r\n      }\r\n\r\n      merged = [update]\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged\r\n  }\r\n\r\n  return {\r\n    type: 'ChunkListUpdate',\r\n    chunks,\r\n    merged,\r\n  }\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB)\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, ChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === 'added' && updateB.type === 'deleted') ||\r\n    (updateA.type === 'deleted' && updateB.type === 'added')\r\n  ) {\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'partial') {\r\n    invariant(updateA.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  if (updateB.type === 'partial') {\r\n    invariant(updateB.instruction, 'Partial updates are unsupported')\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries)\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks)\r\n\r\n  return {\r\n    type: 'EcmascriptMergedUpdate',\r\n    entries,\r\n    chunks,\r\n  }\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB }\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {}\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    const chunkUpdateB = chunksB[chunkPath]\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      )\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\r\n    [ChunkPath, EcmascriptMergedChunkUpdate]\r\n  >) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined\r\n  }\r\n\r\n  return chunks\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === 'added' && updateB.type === 'deleted') {\r\n    // These two completely cancel each other out.\r\n    return undefined\r\n  }\r\n\r\n  if (updateA.type === 'deleted' && updateB.type === 'added') {\r\n    const added = []\r\n    const deleted = []\r\n    const deletedModules = new Set(updateA.modules ?? [])\r\n    const addedModules = new Set(updateB.modules ?? [])\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId)\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId)\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added,\r\n      deleted,\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'partial') {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])])\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ])\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'partial',\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'added' && updateB.type === 'partial') {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ])\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId)\r\n    }\r\n\r\n    return {\r\n      type: 'added',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  if (updateA.type === 'partial' && updateB.type === 'deleted') {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? [])\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId)\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: 'deleted',\r\n      modules: [...modules],\r\n    }\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`)\r\n}\r\n\r\nconst CRITICAL = ['bug', 'error', 'fatal']\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length\r\n  const bI = list.indexOf(b) + 1 || list.length\r\n  return aI - bI\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map()\r\n\r\nfunction emitIssues() {\r\n  const issues = []\r\n  const deduplicationSet = new Set()\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue\r\n\r\n      issues.push(chunkIssue)\r\n      deduplicationSet.add(chunkIssue.formatted)\r\n    }\r\n  }\r\n\r\n  sortIssues(issues)\r\n\r\n  hooks.issues(issues)\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource)\r\n  let hasCriticalIssues = false\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues)\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key)\r\n  }\r\n\r\n  emitIssues()\r\n\r\n  return hasCriticalIssues\r\n}\r\n\r\nconst SEVERITY_ORDER = ['bug', 'fatal', 'error', 'warning', 'info', 'log']\r\nconst CATEGORY_ORDER = [\r\n  'parse',\r\n  'resolve',\r\n  'code generation',\r\n  'rendering',\r\n  'typescript',\r\n  'other',\r\n]\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity)\r\n    if (first !== 0) return first\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category)\r\n  })\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n}\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks)\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues)\r\n\r\n  handleIssues(msg)\r\n\r\n  switch (msg.type) {\r\n    case 'issues':\r\n      // issues are already handled\r\n      break\r\n    case 'partial':\r\n      // aggregate updates\r\n      aggregateUpdates(msg)\r\n      break\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0\r\n      if (runHooks) hooks.beforeRefresh()\r\n      triggerUpdate(msg)\r\n      if (runHooks) finalizeUpdate()\r\n      break\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh()\r\n  hooks.buildOk()\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB()\r\n    globalThis.__NEXT_HMR_CB = null\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  )\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource)\r\n  let callbackSet: UpdateCallbackSet\r\n  const existingCallbackSet = updateCallbackSets.get(key)\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    }\r\n    updateCallbackSets.set(key, callbackSet)\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback)\r\n    callbackSet = existingCallbackSet\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback)\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe()\r\n      updateCallbackSets.delete(key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource)\r\n  const callbackSet = updateCallbackSets.get(key)\r\n  if (!callbackSet) {\r\n    return\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg)\r\n  }\r\n\r\n  if (msg.type === 'notFound') {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/task-management-dashboard/src/components/styles.ts"],"sourcesContent":["const styles = {\r\n    formBox: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '16px',\r\n        marginTop: '16px',\r\n        backgroundColor: 'background.paper',\r\n        padding: '24px',\r\n        borderRadius: '8px',\r\n        boxShadow: 24,\r\n        width: '400px',\r\n    }, \r\n}\r\n\r\nexport default styles;"],"names":[],"mappings":";;;AAAA,MAAM,SAAS;IACX,SAAS;QACL,SAAS;QACT,eAAe;QACf,KAAK;QACL,WAAW;QACX,iBAAiB;QACjB,SAAS;QACT,cAAc;QACd,WAAW;QACX,OAAO;IACX;AACJ;uCAEe","debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/task-management-dashboard/src/components/modal/addTaskModal.tsx"],"sourcesContent":["import { Box, Button, MenuItem, Modal, Select, TextField, Typography } from \"@mui/material\";\r\nimport styles from \"../styles\";\r\n\r\ntype AddTaskModalProps = {\r\n    openAddTaskModal: boolean,\r\n    setOpenAddTaskModal: (open: boolean) => void,\r\n    newTask: {\r\n        title: string,\r\n        description: string,\r\n        status: string,\r\n        priority: string,\r\n        dueDate: string,\r\n        tags: string,\r\n    },\r\n    setNewTask: (task: {\r\n        title: string,\r\n        description: string,\r\n        status: string,\r\n        priority: string,\r\n        dueDate: string,\r\n        tags: string,\r\n    }) => void,\r\n    handleSubmit: (e: React.FormEvent) => void,\r\n}\r\n\r\nexport default function AddTaskModal({ openAddTaskModal, setOpenAddTaskModal, newTask, setNewTask, handleSubmit }: AddTaskModalProps) {\r\n    return (\r\n        <Modal\r\n            open={openAddTaskModal}\r\n            onClose={() => setOpenAddTaskModal(!openAddTaskModal)}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n                sx={styles.formBox}\r\n            >\r\n                <TextField\r\n                    label=\"Task title\"\r\n                    name=\"title\"\r\n                    value={newTask.title}\r\n                    onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    label=\"Describe your task\"\r\n                    name=\"description\"\r\n                    value={newTask.description}\r\n                    onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    label=\"Due date\"\r\n                    name=\"dueDate\"\r\n                    value={newTask.dueDate}\r\n                    onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\r\n                    fullWidth\r\n                    required\r\n                    type=\"date\"\r\n                />\r\n                <Select\r\n                    labelId=\"role-label\"\r\n                    id=\"role\"\r\n                    value={newTask.priority}\r\n                    label=\"Select Priority\"\r\n                    onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n                >\r\n                    <MenuItem value=\"low\">Low</MenuItem>\r\n                    <MenuItem value=\"medium\">Medium</MenuItem>\r\n                    <MenuItem value=\"high\">High</MenuItem>\r\n                </Select>\r\n                <Select\r\n                    labelId=\"role-label\"\r\n                    id=\"role\"\r\n                    value={newTask.status}\r\n                    label=\"Select Status\"\r\n                    onChange={(e) => setNewTask({ ...newTask, status: e.target.value })}\r\n                >\r\n                    <MenuItem value=\"todo\">Todo</MenuItem>\r\n                    <MenuItem value=\"in_progress\">In-Progress</MenuItem>\r\n                    <MenuItem value=\"done\">Done</MenuItem>\r\n                </Select>\r\n                <Select\r\n                    labelId=\"role-label\"\r\n                    id=\"tags\"\r\n                    value={newTask.tags}\r\n                    label=\"Select Tags/Label\"\r\n                    onChange={(e) => setNewTask({ ...newTask, tags: e.target.value })}\r\n                >\r\n                    <MenuItem value=\"feature\">Feature</MenuItem>\r\n                    <MenuItem value=\"enhancement\">Enhancement</MenuItem>\r\n                    <MenuItem value=\"bug\">Bug</MenuItem>\r\n                </Select>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Add New Task\r\n                </Button>\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAwBe,SAAS,aAAa,KAA+F;QAA/F,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAqB,GAA/F;IACjC,qBACI,0JAAC,0LAAA,CAAA,QAAK;QACF,MAAM;QACN,SAAS,IAAM,oBAAoB,CAAC;QACpC,mBAAgB;QAChB,oBAAiB;kBAEjB,cAAA,0JAAC,oLAAA,CAAA,MAAG;YACA,WAAU;YACV,UAAU;YACV,IAAI,uHAAA,CAAA,UAAM,CAAC,OAAO;;8BAElB,0JAAC,sMAAA,CAAA,YAAS;oBACN,OAAM;oBACN,MAAK;oBACL,OAAO,QAAQ,KAAK;oBACpB,UAAU,CAAC,IAAM,WAAW;4BAAE,GAAG,OAAO;4BAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wBAAC;oBAChE,SAAS;oBACT,QAAQ;;;;;;8BAEZ,0JAAC,sMAAA,CAAA,YAAS;oBACN,OAAM;oBACN,MAAK;oBACL,OAAO,QAAQ,WAAW;oBAC1B,UAAU,CAAC,IAAM,WAAW;4BAAE,GAAG,OAAO;4BAAE,aAAa,EAAE,MAAM,CAAC,KAAK;wBAAC;oBACtE,SAAS;oBACT,QAAQ;;;;;;8BAEZ,0JAAC,sMAAA,CAAA,YAAS;oBACN,OAAM;oBACN,MAAK;oBACL,OAAO,QAAQ,OAAO;oBACtB,UAAU,CAAC,IAAM,WAAW;4BAAE,GAAG,OAAO;4BAAE,SAAS,EAAE,MAAM,CAAC,KAAK;wBAAC;oBAClE,SAAS;oBACT,QAAQ;oBACR,MAAK;;;;;;8BAET,0JAAC,6LAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,IAAG;oBACH,OAAO,QAAQ,QAAQ;oBACvB,OAAM;oBACN,UAAU,CAAC,IAAM,WAAW;4BAAE,GAAG,OAAO;4BAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wBAAC;;sCAEnE,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAM;;;;;;sCACtB,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAS;;;;;;sCACzB,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAO;;;;;;;;;;;;8BAE3B,0JAAC,6LAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,IAAG;oBACH,OAAO,QAAQ,MAAM;oBACrB,OAAM;oBACN,UAAU,CAAC,IAAM,WAAW;4BAAE,GAAG,OAAO;4BAAE,QAAQ,EAAE,MAAM,CAAC,KAAK;wBAAC;;sCAEjE,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAO;;;;;;sCACvB,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAc;;;;;;sCAC9B,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAO;;;;;;;;;;;;8BAE3B,0JAAC,6LAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,IAAG;oBACH,OAAO,QAAQ,IAAI;oBACnB,OAAM;oBACN,UAAU,CAAC,IAAM,WAAW;4BAAE,GAAG,OAAO;4BAAE,MAAM,EAAE,MAAM,CAAC,KAAK;wBAAC;;sCAE/D,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAU;;;;;;sCAC1B,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAc;;;;;;sCAC9B,0JAAC,mMAAA,CAAA,WAAQ;4BAAC,OAAM;sCAAM;;;;;;;;;;;;8BAE1B,0JAAC,6LAAA,CAAA,SAAM;oBAAC,MAAK;oBAAS,SAAQ;oBAAY,OAAM;8BAAU;;;;;;;;;;;;;;;;;AAM1E;KA7EwB","debugId":null}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/task-management-dashboard/src/components/TodoAppMainPage.tsx"],"sourcesContent":["import { Props, Task } from \"@/pages\";\r\nimport { Box, Button, Checkbox, List, ListItem, ListItemText, MenuItem, Modal, Paper, Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, TextField, Typography } from \"@mui/material\";\r\nimport { useMemo, useState } from \"react\";\r\nimport AddTaskModal from \"./modal/addTaskModal\";\r\n\r\ninterface Data {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  status: string;\r\n  priority: string;\r\n  tags: string;\r\n  dueDate: Date;\r\n  createdAt: Date;\r\n}\r\ntype Order = 'asc' | 'desc';\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n}\r\n\r\ninterface HeadCell {\r\n  disablePadding: boolean;\r\n  id: keyof Data;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n    {\r\n        id: 'title',\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: 'Task title',\r\n    },\r\n    {\r\n        id: 'description',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Description',\r\n    },\r\n    {\r\n        id: 'status',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Status',\r\n    },\r\n    {\r\n        id: 'priority',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Priority',\r\n    },\r\n    {\r\n        id: 'tags',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Tags/Labels',\r\n    },\r\n    {\r\n        id: 'dueDate',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Due Date',\r\n    },\r\n    {\r\n        id: 'createdAt',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Creation Date',\r\n    }\r\n];\r\n\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                    color=\"primary\"\r\n                    indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                    checked={rowCount > 0 && numSelected === rowCount}\r\n                    onChange={onSelectAllClick}\r\n                    // inputProps={{\r\n                    //     'aria-label': 'select all desserts',\r\n                    // }}\r\n                />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                        {headCell.label}\r\n                        {/* {orderBy === headCell.id ? (\r\n                            <Box component=\"span\" sx={{}}>\r\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                            </Box>\r\n                        ) : null} */}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key,\r\n): (\r\n  a: { [key in Key]: number | string },\r\n  b: { [key in Key]: number | string },\r\n) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nexport default function TodoAppMainPage({task: initialTasks}: Props) {\r\n    const [tasks, setTasks] = useState<Task[]>(initialTasks)\r\n    const [newTask, setNewTask] = useState({\r\n        title: '',\r\n        description: '',\r\n        status: '',\r\n        priority: '',\r\n        dueDate: '',\r\n        tags: '',\r\n    });\r\n    const [editingId, setEditingId] = useState<number | null>(null);\r\n    const [editedTaskName, setEditedTaskName] = useState('');\r\n    const [openAddTaskModal, setOpenAddTaskModal] = useState(false);\r\n    const [selected, setSelected] = useState<readonly number[]>([]);\r\n    const [order, setOrder] = useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = useState<keyof Data>('status');\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: keyof Data,\r\n    ) => {\r\n        const noSortHeaders = ['title', 'description', 'tags', 'dueDate']\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        \r\n        if(!noSortHeaders.includes(property)){\r\n            setOrderBy(property);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        console.log('newTask', newTask)\r\n        try {\r\n            const res = await fetch('/api/addTask', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify({ \r\n                    title: newTask.title, \r\n                    description: newTask.description, \r\n                    status: newTask.status.toUpperCase(), \r\n                    priority: newTask.priority.toUpperCase(), \r\n                    dueDate: newTask.dueDate,\r\n                    tags: newTask.tags.toUpperCase()\r\n                })\r\n            })\r\n\r\n            if(res.ok) {\r\n                const newTasks = await fetch('/api/task').then(r => r.json());\r\n                setTasks(newTasks);\r\n                setNewTask({ \r\n                    title: '', \r\n                    description: '', \r\n                    dueDate: '',\r\n                    status: '',\r\n                    priority: '',\r\n                    tags: '',\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.error(`Error in adding task: ${err}`)\r\n        }\r\n    }\r\n\r\n    const handleDone = async(id: number) => {\r\n        try {\r\n            const res = await fetch('/api/removeTask', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify({ id })\r\n            })\r\n\r\n            if(res.ok) {\r\n                const newTasks = await fetch('/api/task').then(r => r.json());\r\n                setTasks(newTasks);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Error in removing task: ${err}`)\r\n        }\r\n    }\r\n    \r\n    const handleEdit = (id: number) => {\r\n        const taskToEdit = tasks.find((task) => task.id === id);\r\n        if(taskToEdit) {\r\n            setEditingId(id);\r\n            setEditedTaskName(taskToEdit.name)\r\n        }\r\n    }\r\n\r\n    const handleSaveEdit = async (id: number) => {\r\n        try {\r\n            const res = await fetch('/api/editTask', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ id, name: editedTaskName })\r\n            })\r\n\r\n            if(res.ok) {\r\n                const newTasks = await fetch('/api/task').then(r => r.json());\r\n                setTasks(newTasks);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Error in updating task: ${err}`)\r\n        }\r\n        \r\n        setEditingId(null);\r\n        setEditedTaskName('');\r\n    }\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    }\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked) {\r\n        const newSelected = tasks.map((n) => n.id);\r\n        setSelected(newSelected);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, id: number) => {\r\n        const selectedIndex = selected.indexOf(id);\r\n        let newSelected: readonly number[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, id);\r\n        } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n            selected.slice(0, selectedIndex),\r\n            selected.slice(selectedIndex + 1),\r\n        );\r\n        }\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const visibleRows = useMemo(\r\n        () =>\r\n        [...tasks]\r\n            .sort(getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage),\r\n        [order, orderBy, page, rowsPerPage],\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h3\"> Tasks: </Typography>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    onClick={() => setOpenAddTaskModal(!openAddTaskModal)}\r\n                >\r\n                    Add Task\r\n                </Button>\r\n                <AddTaskModal\r\n                    openAddTaskModal={openAddTaskModal} \r\n                    setOpenAddTaskModal={setOpenAddTaskModal}\r\n                    newTask={newTask} \r\n                    setNewTask={setNewTask} \r\n                    handleSubmit={handleSubmit}\r\n                />\r\n            </div>\r\n            <Paper sx={{ marginTop: 2, padding: 2 }}>\r\n                <TableContainer>\r\n                    <Table\r\n                        sx={{ minWidth: 750 }}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={'small'}\r\n                    >\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={5}\r\n                        />\r\n                        <TableBody>\r\n                            {visibleRows.map((task, id) => {\r\n                                const isItemSelected = selected.includes(task.id)\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        onClick={(event) => handleClick(event, task.id)}\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={id}\r\n                                        selected={isItemSelected}\r\n                                        sx={{ cursor: 'pointer' }}\r\n                                    >\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={isItemSelected}\r\n                                                // inputProps={{\r\n                                                // 'aria-labelledby': labelId,\r\n                                                // }}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={task.title}\r\n                                            scope=\"row\"\r\n                                            padding=\"none\"\r\n                                        >\r\n                                            {task.title}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">{task.description}</TableCell>\r\n                                        <TableCell align=\"left\">{task.status}</TableCell>\r\n                                        <TableCell align=\"left\">{task.priority}</TableCell>\r\n                                        <TableCell align=\"left\">{task.tags}</TableCell>\r\n                                        <TableCell align=\"left\">{task.dueDate}</TableCell>\r\n                                        <TableCell align=\"left\">{task.createdAt}</TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={tasks.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            {/* <List>\r\n                {tasks.map((ta) => \r\n                    ta.id === editingId ? \r\n                    (\r\n                        <li key={ta.id}>\r\n                            <input\r\n                                value={editedTaskName}\r\n                                type=\"text\"\r\n                                onChange={(e) => setEditedTaskName(e.target.value)}\r\n                            />\r\n                            <button onClick={() => handleSaveEdit(ta.id)}>Save</button>\r\n                            <button onClick={() =>  setEditingId(null)}>Cancel</button>\r\n                        </li>\r\n                    )\r\n                    :\r\n                    (\r\n                        <ListItem key={ta.id} sx={{}}>\r\n                            <ListItemText primary={ta.title}/>\r\n                            <ListItemText primary={ta.description}/>\r\n                            <ListItemText primary={ta.status}/>\r\n                            <ListItemText primary={ta.priority}/>\r\n                            <button onClick={() => handleDone(ta.id)}>Done</button>\r\n                            <button onClick={() => handleEdit(ta.id)}>Edit</button>\r\n                        </ListItem>\r\n                    )\r\n                )}\r\n            </List> */}\r\n        </>\r\n    )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/task-management-dashboard/src/pages/index.tsx"],"sourcesContent":["// import Head from \"next/head\";\n// import Image from \"next/image\";\nimport TodoAppMainPage from \"@/components/TodoAppMainPage\";\n\nexport type Task = {\n  id: number,\n  name: string,\n  time: string,\n  title: string,\n  description: string,\n  status: string,\n  priority: string,\n  dueDate: string,\n  tags: string,\n  createdAt: string;\n}\n\nexport type Props = {\n  task: Task[]\n}\n\nconst Home: React.FC<Props> = ({task}) => {\n  return (\n    <TodoAppMainPage task={task}/>\n  );\n}\n\nexport const getServerSideProps = async () => {\n  const res = await fetch('http://localhost:3000/api/task');\n  const task: Task = await res.json();\n\n  return {\n      props: { task, },\n  }\n}\n\nexport default Home"],"names":[],"mappings":"AAAA,gCAAgC;AAChC,kCAAkC;;;;;;AAClC;;;AAmBA,MAAM,OAAwB;QAAC,EAAC,IAAI,EAAC;IACnC,qBACE,0JAAC,iIAAA,CAAA,UAAe;QAAC,MAAM;;;;;;AAE3B;KAJM;;uCAeS","debugId":null}},
    {"offset": {"line": 1267, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}