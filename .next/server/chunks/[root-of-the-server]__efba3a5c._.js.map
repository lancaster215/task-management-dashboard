{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/task-management-dashboard/src/lib/db.ts"],"sourcesContent":["import { Pool } from \"pg\";\r\n\r\ndeclare global {\r\n  // allow attaching pgPool to globalThis in Node and browsers during dev\r\n  // eslint-disable-next-line no-var\r\n  var pgPool: Pool | undefined;\r\n}\r\n\r\nlet pool: Pool;\r\n\r\nif (!globalThis.pgPool) {\r\n  globalThis.pgPool = new Pool({\r\n    connectionString: process.env.DATABASE_URL,\r\n    ssl: {\r\n      rejectUnauthorized: false,\r\n    },\r\n  });\r\n}\r\n\r\npool = globalThis.pgPool!;\r\n\r\nexport default pool;\r\n"],"names":[],"mappings":";;;AAAA;;;;;;AAQA,IAAI;AAEJ,IAAI,CAAC,WAAW,MAAM,EAAE;IACtB,WAAW,MAAM,GAAG,IAAI,oGAAA,CAAA,OAAI,CAAC;QAC3B,kBAAkB,QAAQ,GAAG,CAAC,YAAY;QAC1C,KAAK;YACH,oBAAoB;QACtB;IACF;AACF;AAEA,OAAO,WAAW,MAAM;uCAET","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/task-management-dashboard/src/pages/api/addTask.ts"],"sourcesContent":["// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nimport pool from \"@/lib/db\";\nimport type { NextApiRequest, NextApiResponse } from \"next\";\n\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n  try {\n    if(req.method === 'POST') {\n      const { title, description, status, priority, dueDate, tags } = req.body;\n\n      if (!title || !dueDate) {\n        return res.status(400).json({ error: 'Title and due data are required' })\n      }\n\n      await pool.query(`INSERT INTO \"Task\" (title, description, status, priority, \"dueDate\", tags, \"createdAt\", \"updatedAt\") \n        VALUES ($1, $2, $3, $4, $5, $6, NOW(), NOW())`, \n        [\n          title,\n          description,\n          status,\n          priority,\n          dueDate,\n          tags,\n        ]\n      )\n      return res.status(200).json({ message: 'Task added' })\n      \n    }\n  } catch(err: any) {\n    console.error(\"Database error:\", err.message);\n    res.status(500).json({ error: err.message });\n  }\n}\n"],"names":[],"mappings":"AAAA,6EAA6E;;;;AAC7E;;;;;;AAGe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC7E,IAAI;QACF,IAAG,IAAI,MAAM,KAAK,QAAQ;YACxB,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,IAAI;YAExE,IAAI,CAAC,SAAS,CAAC,SAAS;gBACtB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAAkC;YACzE;YAEA,MAAM,yGAAA,CAAA,UAAI,CAAC,KAAK,CAAC,CAAC;qDAC6B,CAAC,EAC9C;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YAEH,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAa;QAEtD;IACF,EAAE,OAAM,KAAU;QAChB,QAAQ,KAAK,CAAC,mBAAmB,IAAI,OAAO;QAC5C,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,IAAI,OAAO;QAAC;IAC5C;AACF","debugId":null}}]
}