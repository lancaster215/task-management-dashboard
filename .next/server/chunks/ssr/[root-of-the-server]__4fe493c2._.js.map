{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/to-do-app/src/components/TodoAppMainPage.tsx"],"sourcesContent":["import { Props, Task } from \"@/pages\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport default function TodoAppMainPage({task: initialTasks}: Props) {\r\n    const [tasks, setTasks] = useState<Task[]>(initialTasks)\r\n    const [newTask, setNewTask] = useState({\r\n        title: '',\r\n        description: '',\r\n        status: '',\r\n        priority: '',\r\n        dueDate: '',\r\n    });\r\n    const [editingId, setEditingId] = useState<number | null>(null);\r\n    const [editedTaskName, setEditedTaskName] = useState('') \r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const res = await fetch('/api/addTask', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify({ \r\n                    title: newTask.title, \r\n                    description: newTask.description, \r\n                    status: newTask.status, \r\n                    priority: newTask.priority, \r\n                    dueDate: newTask.dueDate \r\n                })\r\n            })\r\n\r\n            if(res.ok) {\r\n                const newTasks = await fetch('/api/task').then(r => r.json());\r\n                setTasks(newTasks);\r\n                setNewTask({ \r\n                    title: '', \r\n                    description: '', \r\n                    dueDate: '',\r\n                    status: '',\r\n                    priority: '',\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.error(`Error in adding task: ${err}`)\r\n        }\r\n    }\r\n\r\n    const handleDone = async(id: number) => {\r\n        try {\r\n            const res = await fetch('/api/removeTask', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify({ id })\r\n            })\r\n\r\n            if(res.ok) {\r\n                const newTasks = await fetch('/api/task').then(r => r.json());\r\n                setTasks(newTasks);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Error in removing task: ${err}`)\r\n        }\r\n    }\r\n    \r\n    const handleEdit = (id: number) => {\r\n        const taskToEdit = tasks.find((task) => task.id === id);\r\n        if(taskToEdit) {\r\n            setEditingId(id);\r\n            setEditedTaskName(taskToEdit.name)\r\n        }\r\n    }\r\n\r\n    const handleSaveEdit = async (id: number) => {\r\n        try {\r\n            const res = await fetch('/api/editTask', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ id, name: editedTaskName })\r\n            })\r\n\r\n            if(res.ok) {\r\n                const newTasks = await fetch('/api/task').then(r => r.json());\r\n                setTasks(newTasks);\r\n            }\r\n        } catch (err) {\r\n            console.error(`Error in updating task: ${err}`)\r\n        }\r\n        \r\n        setEditingId(null);\r\n        setEditedTaskName('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h3\"> Tasks: </Typography>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input \r\n                        placeholder=\"Enter Task title\" \r\n                        type=\"text\"\r\n                        value={newTask.title} \r\n                        onChange={(e) => setNewTask(prev => ({...prev, title: e.target.value}))}\r\n                        required\r\n                    />\r\n                    <input \r\n                        placeholder=\"Describe your task\"\r\n                        type=\"text\"\r\n                        value={newTask.description}\r\n                        onChange={(e) => setNewTask(prev => ({...prev, description: e.target.value}))}\r\n                        required\r\n                    />\r\n                    <input\r\n                        placeholder=\"Due Date\"\r\n                        type=\"date\"\r\n                        value={newTask.dueDate}\r\n                        onChange={(e) => setNewTask(prev => ({...prev, dueDate: e.target.value}))}\r\n                        required\r\n                    />\r\n                    <input\r\n                        placeholder=\"Due Date\"\r\n                        type=\"date\"\r\n                        value={newTask.dueDate}\r\n                        onChange={(e) => setNewTask(prev => ({...prev, dueDate: e.target.value}))}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\"> Add Task </button>\r\n                </form>\r\n            </div>\r\n            <ul>\r\n                {tasks.map((ta) => \r\n                    ta.id === editingId ? \r\n                    (\r\n                        <li key={ta.id}>\r\n                            <input\r\n                                value={editedTaskName}\r\n                                type=\"text\"\r\n                                onChange={(e) => setEditedTaskName(e.target.value)}\r\n                            />\r\n                            <button onClick={() => handleSaveEdit(ta.id)}>Save</button>\r\n                            <button onClick={() =>  setEditingId(null)}>Cancel</button>\r\n                        </li>\r\n                    )\r\n                    :\r\n                    (\r\n                        <li key={ta.id}>\r\n                            {ta.title} \r\n                            {ta.description}\r\n                            <button onClick={() => handleDone(ta.id)}>Done</button>\r\n                            <button onClick={() => handleEdit(ta.id)}>Edit</button>\r\n                        </li>\r\n                    )\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/to-do-app/src/pages/index.tsx"],"sourcesContent":["// import Head from \"next/head\";\n// import Image from \"next/image\";\nimport TodoAppMainPage from \"@/components/TodoAppMainPage\";\n\nexport type Task = {\n  id: number,\n  name: string,\n  time: string,\n  title: string,\n  description: string\n}\n\nexport type Props = {\n  task: Task[]\n}\n\nconst Home: React.FC<Props> = ({task}) => {\n  return (\n    <TodoAppMainPage task={task}/>\n  );\n}\n\nexport const getServerSideProps = async () => {\n  const res = await fetch('http://localhost:3000/api/task');\n  const task: Task = await res.json();\n\n  return {\n      props: { task, },\n  }\n}\n\nexport default Home"],"names":[],"mappings":"AAAA,gCAAgC;AAChC,kCAAkC;;;;;;AAClC;;;AAcA,MAAM,OAAwB,CAAC,EAAC,IAAI,EAAC;IACnC,qBACE,qKAAC,8HAAA,CAAA,UAAe;QAAC,MAAM;;;;;;AAE3B;AAEO,MAAM,qBAAqB;IAChC,MAAM,MAAM,MAAM,MAAM;IACxB,MAAM,OAAa,MAAM,IAAI,IAAI;IAEjC,OAAO;QACH,OAAO;YAAE;QAAM;IACnB;AACF;uCAEe","debugId":null}}]
}