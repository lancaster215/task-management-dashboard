{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/to-do-app/src/lib/db.ts"],"sourcesContent":["import { Pool } from \"pg\";\r\n\r\nconst pool = new Pool({\r\n    connectionString: process.env.DATABASE_URL,\r\n})\r\n\r\nexport default pool"],"names":[],"mappings":";;;AAAA;;;;;;AAEA,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IAClB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;AAC9C;uCAEe","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/to-do-app/src/pages/custom/limiter.ts"],"sourcesContent":["const rateLimitMap: Record<string, number[]> = {};\r\n\r\n/*\r\n* @params(ip = endpoint, limit = max number of request per time, windowMs = max time)\r\n*/ \r\nfunction isAllowed(ip: string, limit = 10, windowMs = 60 * 1000): boolean {\r\n    const now = Date.now();\r\n\r\n    if(!rateLimitMap[ip]) rateLimitMap[ip] = [];\r\n    rateLimitMap[ip] = rateLimitMap[ip].filter(ts => now - ts < windowMs);\r\n\r\n    if(rateLimitMap[ip].length >= limit ) return false;\r\n\r\n    rateLimitMap[ip].push(now);\r\n    return true;\r\n}\r\n\r\nexport default isAllowed;"],"names":[],"mappings":";;;AAAA,MAAM,eAAyC,CAAC;AAEhD;;AAEA,GACA,SAAS,UAAU,EAAU,EAAE,QAAQ,EAAE,EAAE,WAAW,KAAK,IAAI;IAC3D,MAAM,MAAM,KAAK,GAAG;IAEpB,IAAG,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,GAAG,EAAE;IAC3C,YAAY,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA,KAAM,MAAM,KAAK;IAE5D,IAAG,YAAY,CAAC,GAAG,CAAC,MAAM,IAAI,OAAQ,OAAO;IAE7C,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC;IACtB,OAAO;AACX;uCAEe","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/to-do-app/src/pages/api/task.ts"],"sourcesContent":["import pool from \"@/lib/db\";\r\nimport type { NextApiRequest, NextApiResponse } from \"next\";\r\nimport isAllowed from \"../custom/limiter\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    const ip = req.headers['x-forwarded-for'] || req.socket.remoteAddress || 'unknown';\r\n\r\n    if(!isAllowed(String(ip), 5, 10000)) {\r\n        return res.status(429).json({ message: 'Too many requests. Try again later.' });\r\n    }\r\n\r\n    try {\r\n        const result = await pool.query(\"SELECT * FROM tasks ORDER BY id DESC\");\r\n\r\n        res.status(200).json(result.rows)\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;AAEA;;;;;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,MAAM,KAAK,IAAI,OAAO,CAAC,kBAAkB,IAAI,IAAI,MAAM,CAAC,aAAa,IAAI;IAEzE,IAAG,CAAC,CAAA,GAAA,0HAAA,CAAA,UAAS,AAAD,EAAE,OAAO,KAAK,GAAG,QAAQ;QACjC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAsC;IACjF;IAEA,IAAI;QACA,MAAM,SAAS,MAAM,yGAAA,CAAA,UAAI,CAAC,KAAK,CAAC;QAEhC,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,OAAO,IAAI;IACpC,EAAE,OAAM,KAAK;QACT,QAAQ,GAAG,CAAC;IAChB;AACJ","debugId":null}}]
}