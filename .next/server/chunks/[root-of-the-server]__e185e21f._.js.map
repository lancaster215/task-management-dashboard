{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/to-do-app/src/lib/db.ts"],"sourcesContent":["import { Pool } from \"pg\";\r\n\r\nconst pool = new Pool({\r\n    connectionString: process.env.DATABASE_URL,\r\n})\r\n\r\nexport default pool"],"names":[],"mappings":";;;AAAA;;;;;;AAEA,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IAClB,kBAAkB,QAAQ,GAAG,CAAC,YAAY;AAC9C;uCAEe","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Francisco%20Ifurung/Desktop/to-do-app/src/pages/api/editTask.ts"],"sourcesContent":["import pool from \"@/lib/db\";\r\nimport { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    try{\r\n        if(req.method === \"POST\") {\r\n            const { id, name } = req.body;\r\n\r\n            await pool.query(\"UPDATE tasks SET name=($1) WHERE id=($2) \", [name, id]);\r\n\r\n            return res.status(200).json({ message: 'Successfully updated task'})    \r\n        }\r\n        const result = await pool.query(\"SELECT * FROM tasks ORDER BY id DESC\");\r\n        res.status(200).json(result.rows)\r\n    } catch (err) {\r\n        console.error(`Error in updating task: ${err}`)\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;;;;;;AAGe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,IAAG;QACC,IAAG,IAAI,MAAM,KAAK,QAAQ;YACtB,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,IAAI,IAAI;YAE7B,MAAM,yGAAA,CAAA,UAAI,CAAC,KAAK,CAAC,6CAA6C;gBAAC;gBAAM;aAAG;YAExE,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAA2B;QACtE;QACA,MAAM,SAAS,MAAM,yGAAA,CAAA,UAAI,CAAC,KAAK,CAAC;QAChC,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,OAAO,IAAI;IACpC,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,CAAC,wBAAwB,EAAE,KAAK;IAClD;AACJ","debugId":null}}]
}